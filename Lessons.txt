1.The best way to debug if a element isn't getting styled properly is by going to the browser and inspect that
particular element and see if there are any other css styling also that are getting applied on that particular
element, if yes, remove them or rename the element , etc.

2. onChange handlers doesn't work properly when u've registered that particular element in the internal state
of the react hook form, see why? Instead you can use the watch method of react hook form to get the current 
state of an element and u can use setValue to update the state of a element manually.

3. In mongoDB, while defining mongoose schema, using --
  { timestamps: true } // ðŸ‘ˆ Adds createdAt & updatedAt automatically

4. We can also submit a form with a button that's outside the form by linking them, assign a id to the form
element and pass form = "form_id" in the opening tag of button, now they are linked together.

5. MongoDB automatically creates an _id field for each object inside the options array (in poll schema)
because subdocuments (objects within arrays in a schema) are treated as full-fledged documents by Mongoose.

6. Don't overthink too much and keep things simple,if u have an array of objects inside the schema, and u want
to choose a particular option from it using it's id, then why think so much? it's an array after all , just
use the find method to get it, simple. "USE UR MIND TOO, BREAK PROBLEMS INTO SMALLER CHUNKS".

7. While comparing two ids in mongoose, make sure to check their types, if one of them is object and another
one is a string it's will show undefined or error, so make both of them a string to compare.

8. If NaN is printing somewhere in console, try printing the type of the operators and check for spelling 
mistakes too, don't just go and open ChatGPT, try to debug yourself too.

9. What problem was occuring while designing the poll option 2 ::before, why the text was getting covered and
how it got fixed? see in SS. Also see how variable width was passed to the pseudo element.

10. You can't call useNavigate hook inside zustand store as it's plain js, so u can pass the navigate function
from somewhere else, maybe as a parameter to the function you're calling. Remember this from now on.

11. We can't use onChange on react hook form elements, instead we can use the watch method to track the state
of that element.

12. To provide a preview of the image wihtout even uploading them to cloudinary you can use a FileReader or 
URL.createObjectUrl api , these are built-in javascipt api, how to use it , how it works? See on Google and
chatGPT how it works, and add to notes.

13. Instead of doing DOM manipulation, you can conditionally change the styling on an element according to the
state of that element. U can change the class of the particular element or u can give it a style tag that 
shows styling according to the state, for example see PollOption.jsx for example.

14. U can create dynamic routes in react and use useParams() hook to get the parameter from the url and fetch
data for a particular user based on his id, like dynamic routes for visiting user's profile.

15. Search about Set and Map data structures in javascipt and why to use them instead or array for storing,
insertion, deletion ,etc, the lower the time & space complexity of a D.S. or function, better the performance.

16. What is circular dependency in Javascript? why it throws error? It's because of this that the error was
occuring in the useUserStore , when u were trying to import usePostStore as usePostStore also imports 
useUserStore, so both are dependent on each other. To tackle, this, use dynamic imports inside the function
you need to use it, see useUserStore and GPT for demonstration.

17. Why the postId was getting printed again and again when scrolling the page up and down again and again?
See in ChatGPT and also see , how to prevent that in REACT?

18. Also explore why we should avoid DOM manipulation in REACT as much as possible?

19. What is Intersection observer in detail? How it works in react? How do we use multiple refs in react?
What are multiple ways of doing so? And other small lessons along with it also.
Also, IO by default observes everytime the specified element comes into the veiwport, but u can also change it
to ensure it triggers only once, see in code.

20. Why does all posts were getting re-rendered each time a new post comes into the viewport and is observed
by the intersection observer? 
Each time a new post comes into the viewport, the viewedPostIds state variable gets updated , due to which the
whole component gets re-rendered, along with posts, so all posts ids gets printed on the console window.
To fix this use useRef instead of useState, also for future, if you don't need to show the changes on the UI
and just've to persist the value across re-renders then just use useRef hook,not useState hooks.

21. Debouncing vs SetTimeOuts in react. Detail comparison with pros and cons of each.

22.(V Imp) Modularity and breaking components into smaller & smaller parts and giving state variables to different
components very carefully is very important to ensure no un-necessary re-render occurs, as it decreases the 
performance. That's why decide the state for a particular component very carefully and try to separate and
break the components as much as possible, don't create unnecessary state variables. 
Ex. :- Suppose u have a big component that has various child components now a state variable in the parent
component changes, but there's no change in other child components state, but they'll also get re-rendered again
along with the whole parent, that's why keep the concerns separate as much as possible each time to build a 
react app.
NO. OF RE-RENDERS IS INVERSELY PROPORTIONAL TO PERFORMANCE OF YOUR APP.

23. Use node-cron library to implement features such as scheduling.

24. Use ternary operators anywhere u need be it, frontend, backend,etc, to conditionally add values or 
perform certain tasks.

25. At the time of scheduled posts, means when scheduled posts were being published, infinite scroll wasn't 
getting triggered & new posts were not being fetched from the backend, because, the two posts(limit of paignation)
was 2, were not enough to cover the whole viewport, and when they're weren't covering the whole viewport, there
was nothing to scroll and that's why react infinite scroll wasn't getting triggered and no new posts were fetched.

26. You can pass default values to react hook form, use this knowledge to improve and refactor the code, so that
components become more reusable and you don't have to create new components for each part, use the default value
feature if needed in all your components.

27. What are CSS modules, how do they help u in styling react components better? Also explore other ways for
naming the components effectively without overriding classes.

SEE LESSONS FROM GPT ALSO AND ADD TO NOTES.
